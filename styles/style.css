/*This page will hold the functions used in the page.*/
/*This function is similar to the one above but it converts px to em.*/
/*This page will control the responsive sizing of the page.*/
/*breakpoint sizes map
mobile = 700px
tablet = 900px
desktop = 1440px
*/
/*breakpoint sizes map for max width
small(699.98px)
medium(899.89px)
large(1439.98px)
using a 0.02 point difference avoids overlap issues
*/
/*The block below is a mixin for width-min*/
/*max-width mixin*/
*,
::before,
::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

/*The line below stops the navbar animation when the window is being resized.*/
.resize-animation-stopper * {
  transition: none !important;
  animation: none !important;
}

body {
  width: 100vw;
}

ul {
  list-style-type: none;
}

a {
  text-decoration: none;
  color: #FFF;
}

span {
  display: none;
}

header {
  height: 5rem;
  width: 100%;
  padding: 1rem 1rem;
  /*nav*/
}
header #logo h1 {
  font-size: 1.5rem;
  position: fixed;
  top: 1%;
}
header #hamburger {
  position: fixed;
  left: 85%;
  top: 3%;
  height: 1rem;
  z-index: 9999;
  width: 1.8rem;
  background: none;
  border: none;
}
header .hamburger_line {
  width: 1.5rem;
  height: 0.6rem;
  border-top: solid white 1.6px;
}
header .hamburger_line:hover {
  cursor: pointer;
}
header #nav_bar {
  /* the min function will choose the smallest size parameter based on the screen dimension and apply that to the padding.*/
  padding: min(15vh, 5rem) 2rem;
  z-index: 1000;
  transform: translateX(100%);
  transition: transform 350ms ease-out;
}
header #nav_bar[data-visible=true] {
  transform: translateX(0%);
}
header #nav_list {
  margin-top: 2.5em;
  height: 45%;
  width: 100%;
  flex-direction: column;
  align-items: center;
}

/*Intro Section*/
#intro {
  margin: 5rem 0 15rem 0;
  padding-bottom: 5rem;
}

#introHeader h1, #introHeader h2 {
  margin-bottom: 1rem;
}
#introHeader p {
  margin-bottom: 3rem;
}

#portfolioImg {
  width: 100%;
  text-align: center;
  margin-bottom: 1rem;
}

#introParagraph, .about_bio, #contact_info {
  padding: 1rem 1, 5rem;
  margin: 0.5rem 2rem;
}

@keyframes movingCircles {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes verticalMove {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: rtranslateY(-50%);
  }
}
@keyframes horizontalMove {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(-50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) rtranslateY(10%);
  }
}
#gradient-bg {
  width: 105%;
  height: 125%;
  position: absolute;
  overflow: hidden;
  z-index: -2000;
  top: 0;
  left: 0;
}
#gradient-bg #gradientContainer {
  width: 100%;
  height: 100%;
}
#gradient-bg #graid1 {
  position: absolute;
  width: 80rem;
  height: 80rem;
  top: calc(50% - 40rem);
  left: calc(80% - 40rem);
  transform-origin: center center;
  animation: verticalMove 30s ease infinite;
}
#gradient-bg #graid2 {
  position: absolute;
  width: 80rem;
  height: 80rem;
  top: calc(50% - 40rem);
  left: calc(60% - 40rem);
  transform-origin: calc(50% - 400px);
  animation: movingCircles 18s reverse infinite;
}
#gradient-bg #graid3 {
  position: absolute;
  width: 80rem;
  height: 80rem;
  top: calc(50% - 40rem + 200px);
  left: calc(90% - 40rem - 500px);
  transform-origin: calc(50% - 400px);
  animation: movingCircles 48s linear infinite;
}
#gradient-bg #graid4 {
  position: absolute;
  width: 80rem;
  height: 80rem;
  top: calc(50% - 40rem);
  left: calc(80% - 40rem);
  transform-origin: calc(80% - 200px);
  animation: horizontalMove 18s ease infinite;
}
#gradient-bg #graid5 {
  position: absolute;
  width: 80rem;
  height: 80rem;
  top: calc(50% - 80rem);
  left: calc(50% - 80rem);
  transform-origin: calc(50% - 800px) calc(50% + 200px);
  animation: movingCircles 25s ease infinite;
}

/*About Section*/
#about, #tech {
  margin: 2rem 0;
  padding-bottom: 1rem;
}

#about h2, h3 {
  margin: 2rem 0;
}

.about_bio {
  margin-bottom: 2rem;
  padding-left: 1.5rem;
}

/*Tech Section*/
#tech_list {
  margin-top: 1.5rem;
}

.tech_item i {
  margin: 1rem 0;
}

/*Works Section*/
.projects {
  width: 90%;
  height: 100%;
  margin: 2rem 0;
  padding-bottom: 4rem;
}
.projects img {
  width: 100%;
}

.cta {
  width: 100%;
  height: 9rem;
  padding: 1rem 0;
  margin: auto;
  margin-left: -5rem;
}
@keyframes animate1A {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
@keyframes animate2A {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}
@keyframes animate3A {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}
@keyframes animate4A {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes animate1B {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}
@keyframes animate2B {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(-100%);
  }
}
@keyframes animate3B {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}
@keyframes animate4B {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}
.cta .cta_btn {
  position: absolute;
  color: #FFF;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-size: 1em;
  padding: 15px 30px;
  box-shadow: 0 10px 60px rgba(225, 226, 236, 0.5);
  overflow: hidden;
}
.cta .cta_btn ::before {
  content: "";
  position: absolute;
  width: 50%;
  top: 2px;
  left: 2px;
  bottom: 2px;
  background: rgba(147, 49, 204, 0.05);
}
.cta .cta_btn span:nth-child(1) {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(to right, #9331cc, #EE7BD9);
  animation: animate1A 2s linear infinite;
}
.cta .cta_btn span:nth-child(2) {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  width: 2px;
  height: 100%;
  background: linear-gradient(to bottom, #9331cc, #EE7BD9);
  animation: animate2A 2s linear infinite;
  animation-delay: 1s;
}
.cta .cta_btn span:nth-child(3) {
  display: block;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(to left, #9331cc, #EE7BD9);
  animation: animate3A 2s linear infinite;
}
.cta .cta_btn span:nth-child(4) {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  width: 2px;
  height: 100%;
  background: linear-gradient(to top, #9331cc, #EE7BD9);
  animation: animate4A 2s linear infinite;
  animation-delay: 1s;
}
.cta .live span:nth-child(1) {
  background: linear-gradient(to right, #02198e, #1472ff);
  animation: animate1B 2s linear infinite;
}
.cta .live span:nth-child(2) {
  background: linear-gradient(to right, #02198e, #1271ff);
  animation: animate2B 2s linear infinite;
  animation-delay: 1s;
}
.cta .live span:nth-child(3) {
  background: linear-gradient(to right, #02198e, #1271ff);
  animation: animate3B 2s linear infinite;
}
.cta .live span:nth-child(4) {
  background: linear-gradient(to right, #02198e, #1271ff);
  animation: animate4B 2s linear infinite;
  animation-delay: 1s;
}
.cta .live {
  width: 10.3rem;
}
.cta .submit_btn span:nth-child(1) {
  background: linear-gradient(to right, #ffd900, #bcb432);
  animation: animate1B 2s linear infinite;
}
.cta .submit_btn span:nth-child(2) {
  background: linear-gradient(to right, #ffd900, #bcb432);
  animation: animate2B 2s linear infinite;
  animation-delay: 1s;
}
.cta .submit_btn span:nth-child(3) {
  background: linear-gradient(to right, #ffd900, #bcb432);
  animation: animate3B 2s linear infinite;
}
.cta .submit_btn span:nth-child(4) {
  background: linear-gradient(to right, #ffd900, #bcb432);
  animation: animate4B 2s linear infinite;
  animation-delay: 1s;
}
.cta button:hover {
  cursor: pointer;
}

/*Contact Form Section*/
#contact {
  padding-bottom: 5rem;
}
#contact #contact_paragraph {
  width: 70%;
  margin: 3rem 0 2rem 0;
  padding: 2rem 0 2rem 0;
  text-align: center;
}
#contact #contact_form {
  width: 19rem;
  height: 35rem;
  border: 2px solid #EE7BD9;
  border-radius: 15px;
}
#contact #contact_form #collected_info {
  height: 70%;
  width: 90%;
  margin-bottom: 1rem;
  padding: 0.5rem 0.3rem;
}
#contact #contact_form #user_info {
  height: 100%;
  width: 100%;
}
#contact #contact_form #user_info input {
  width: 100%;
}
#contact #contact_form .user_data, #contact #contact_form #contact_message textarea {
  border-radius: 20px;
  border: solid 2px #EE7BD9;
}
#contact #contact_form .user_data {
  width: 17rem;
  height: 2.3rem;
  padding: 6px;
}
#contact #contact_form #contact_message {
  width: 100%;
}
#contact #contact_form #contact_message textarea {
  width: 100%;
  height: 100%;
  padding: 6px 0 0 6px;
}
#contact #contact_form #sub_btn {
  height: 5%;
  margin: auto;
  padding: 10%;
  text-align: center;
  justify-content: center;
  align-items: center;
}
#contact #contact_form #sub_btn .submit_btn {
  padding: 7px 40px;
  box-shadow: 0 10px 60px rgba(225, 226, 236, 0.5);
  overflow: hidden;
  border: none;
}
#contact #contact_form #sub_btn .submit_btn input {
  border: none;
}

/*This media query is generated everytime the mixin is used
    The map-get functions above allows the breakpint sizes set inthe sass map above to be used in this media query
    the map-get function takes two parameters, the name of the sass map(in this case the breakpoint size) and the key in the map that we want to use
    In this case we want the key parameter to stay open as the screen sizes will vary from medium, large and x-large so I will add a parameter to the 
    mixin named $size which we will use as the second map-up function parameter 
    When creating meida queries it is best to use ems.*/
@media (min-width: 56.25em) {
  /*The @content keyword allows the style rules to be loaded in the mixin when it is used*/
  main {
    margin: 0 2.5rem;
  }
  #hamburger {
    display: none;
  }
  #nav_bar {
    position: absolute;
    padding: 0;
    background: none;
    -webkit-backdrop-filter: none;
            backdrop-filter: none;
    transform: translateX(0%);
  }
  #nav_list {
    height: 0.5rem;
    width: 100%;
  }
  #gradient-bg {
    width: 100vw;
    height: 100vh;
  }
  #Intro {
    height: 30vh;
  }
  #intro_bio {
    height: 45vh;
  }
  #intro_bio #portfolio_img {
    background-image: url("/Portfolio_sites/Version_2/Media/Portfolio6.png");
    background-repeat: no-repeat;
    background-size: cover;
    height: 30%;
  }
  #intro_bio img {
    width: 35%;
    position: relative;
    top: 10%;
    left: 30%;
  }
  #tech {
    height: 23rem;
    margin-bottom: 5rem;
  }
  #tech #tech_list {
    width: 30%;
  }
  #tech #tech_list .list_items {
    margin: 1rem 15.6rem;
    padding: 0 1rem;
  }
  #work {
    margin-bottom: 3rem;
  }
  #work .projects img {
    width: 65%;
    border-radius: 25px;
  }
  #work .projects .cta {
    width: 30%;
    padding: 1rem 0;
    margin-left: 35.5%;
  }
  #work .projects .cta button {
    padding: 0.8rem 4rem;
    border: none;
  }
  #work .projects .cta .live {
    width: auto;
  }
  #contact #contact_form {
    width: 40%;
    height: 35rem;
    padding-top: 1%;
  }
  #contact #contact_form #collected_info {
    height: 100%;
    padding: 0.3rem 0.5rem;
  }
}
#graid1 {
  background: radial-gradient(circle at center, rgba(18, 113, 255, 0.8) 0, rgba(18, 113, 255, 0) 50%) no-repeat;
  mix-blend-mode: hard-light;
  opacity: 1;
}

#graid2 {
  background: radial-gradient(circle at center, rgba(221, 74, 255, 0.8) 0, rgba(221, 74, 255, 0) 50%) no-repeat;
  mix-blend-mode: hard-light;
  opacity: 1;
}

#graid3 {
  background: radial-gradient(circle at center, rgba(100, 220, 255, 0.8) 0, rgba(100, 220, 255, 0) 50%) no-repeat;
  mix-blend-mode: hard-light;
  opacity: 1;
}

#graid4 {
  background: radial-gradient(circle at center, rgba(200, 50, 50, 0.8) 0, rgba(200, 50, 50, 0) 50%) no-repeat;
  mix-blend-mode: hard-light;
  opacity: 1;
}

#graid5 {
  background: radial-gradient(circle at center, rgba(188, 180, 50, 0.8) 0, rgba(188, 180, 50, 0) 50%) no-repeat;
  mix-blend-mode: hard-light;
  opacity: 1;
}

body {
  color: #FFFFFF;
  background: linear-gradient(45deg, #bc00a2, #001152);
}
body header #logo h1 {
  color: #FFFFFF;
}
body header #nav_bar {
  background: rgba(9, 31, 73, 0.4392156863);
  -webkit-backdrop-filter: blur(1rem);
          backdrop-filter: blur(1rem);
}
body header .nav_item {
  color: #FFF;
}
body header .nav_item:hover {
  color: #EE7BD9;
  cursor: pointer;
}

h1, h2, h3, h4 {
  color: #ffd900;
}

#sub_btn button {
  background-color: #a7099a;
}
#sub_btn button input {
  background: none;
  color: #FFFFFF;
}

/*This media query is generated everytime the mixin is used
    The map-get functions above allows the breakpint sizes set inthe sass map above to be used in this media query
    the map-get function takes two parameters, the name of the sass map(in this case the breakpoint size) and the key in the map that we want to use
    In this case we want the key parameter to stay open as the screen sizes will vary from medium, large and x-large so I will add a parameter to the 
    mixin named $size which we will use as the second map-up function parameter 
    When creating meida queries it is best to use ems.*/
@media (min-width: 56.25em) {
  /*The @content keyword allows the style rules to be loaded in the mixin when it is used*/
  #project_1 button {
    background-color: #5f157a;
  }
  #project_2 button {
    background-color: #7b1287;
  }
  #project_3 button {
    background-color: #8d0f8f;
  }
}
body {
  font-family: sans-serif;
  line-height: 3em;
}

p {
  font-size: 1.8em;
  word-spacing: 0em;
}

h1 {
  font-size: 3em;
}

h2 {
  font-size: 2.5em;
}

h3 {
  font-size: 1.8em;
}

.nav_item {
  font-size: 1.5em;
}

#introParagraph, #contact_info {
  font-size: small;
}

.about_bio {
  font-size: large;
}

#introHeader h1 {
  font-size: x-large;
}
#introHeader h2 {
  font-size: large;
}

#about h2, #tech h2, .projects h3, #contact_form h1 {
  font-size: 1.7em;
}

#about h3 {
  font: 1em;
  text-align: center;
}

#tech h2 {
  text-align: center;
}

#tech_list {
  list-style: none;
}
#tech_list .list_items {
  font-size: 1em;
}
#tech_list .list_items .tech_item i {
  font-size: 3em;
}
#tech_list .list_items .tech_item p {
  font-size: 0.4em;
}
#tech_list .list_items .tech_item h4 {
  font-size: 1em;
}

#tech_list, #contact_paragraph {
  font-size: 1.5em;
}

/*This media query is generated everytime the mixin is used
    The map-get functions above allows the breakpint sizes set inthe sass map above to be used in this media query
    the map-get function takes two parameters, the name of the sass map(in this case the breakpoint size) and the key in the map that we want to use
    In this case we want the key parameter to stay open as the screen sizes will vary from medium, large and x-large so I will add a parameter to the 
    mixin named $size which we will use as the second map-up function parameter 
    When creating meida queries it is best to use ems.*/
@media (min-width: 56.25em) {
  /*The @content keyword allows the style rules to be loaded in the mixin when it is used*/
  #introHeader h1 {
    font-size: 2.5em;
  }
  #introHeader h2 {
    font-size: 2em;
  }
  #introParagraph, #contact_info, .about_bio {
    text-align: justify;
  }
  .about_bio {
    font-size: x-large;
  }
}
body {
  display: flex;
  flex-direction: column;
  align-items: center;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
header .hamburger_line {
  display: flex;
  flex-direction: column;
}
header #nav_bar, header #nav_list {
  display: flex;
  justify-content: space-evenly;
}
header #nav_bar {
  position: fixed;
  inset: 0 0 0 50%;
}

#intro {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#mainContent {
  display: flex;
  flex-direction: column;
  align-items: center;
}

#about, #tech, .tech_item, #work, .projects, #contact, #contact_form, #collected_info, #user_info {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.projects h3 {
  text-align: center;
}

.cta {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.cta button, .cta a {
  margin: auto;
}

#contact_form {
  flex-direction: column;
}
#contact_form #user_info {
  justify-content: space-evenly;
}
#contact_form #contact_header {
  justify-content: center;
}

/*This media query is generated everytime the mixin is used
    The map-get functions above allows the breakpint sizes set inthe sass map above to be used in this media query
    the map-get function takes two parameters, the name of the sass map(in this case the breakpoint size) and the key in the map that we want to use
    In this case we want the key parameter to stay open as the screen sizes will vary from medium, large and x-large so I will add a parameter to the 
    mixin named $size which we will use as the second map-up function parameter 
    When creating meida queries it is best to use ems.*/
@media (min-width: 56.25em) {
  /*The @content keyword allows the style rules to be loaded in the mixin when it is used*/
  Header {
    padding: 0 0.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  #nav_list {
    display: flex;
    justify-content: end;
    flex-direction: row;
    align-items: center;
  }
  #Intro p {
    position: relative;
    top: 15%;
    left: 10%;
  }
  #Intro h1 {
    position: relative;
    top: 5%;
    left: 20%;
  }
  #Intro h2 {
    position: relative;
    top: 0;
    left: 30%;
  }
  #tech {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    align-items: center;
    width: 90%;
    height: 100%;
  }
  #tech #tech_list {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    width: 100%;
  }
  #tech #tech_list .tech_item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
  }
  #tech #tech_list #html5, #tech #tech_list #css3 {
    padding: 0.5rem 2rem;
  }
  #tech #tech_list #git {
    padding: 0.5rem 3rem;
  }
  #about {
    width: 70%;
    text-align: center;
  }
  #work .projects {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  #work .cta {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
  }
  #work button {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  #contact_paragraph {
    margin: 0.5rem 0 2rem 0;
    padding: 2rem 0 1rem 0;
    text-align: center;
  }
}/*# sourceMappingURL=style.css.map */